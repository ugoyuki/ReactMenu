{"ast":null,"code":"var _jsxFileName = \"/Users/ugo1/react-tutorial/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport { useState, useRef } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Menu from \"./Menu\";\n\n//next.jsを使わずに画面遷移\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isMenu, setIsMenu] = useState(false);\n  const handleClick = flag => {\n    console.log(isMenu);\n    setIsMenu(flag);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [!isMenu && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Menu\",\n              onClick: () => handleClick(true),\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), isMenu && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about\",\n              onClick: () => handleClick(false),\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Menu\",\n          element: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n// function Menu() {\n//   const i = 1\n\n//   //setTextを使うことでtextsに値を書きこむことできる。\n//   const [texts,setText] = useState([\n//     { id:uuidv4() , name:\"test1\", checked:false}\n//   ]);\n\n//   //文字列を取得する\n//   const refTest = useRef();\n\n//   //追加ボタンを押すと呼び出される関数\n//   const AddTodo = () =>{\n//     const name = refTest.current.value;\n//     //値を追加する\n//     setText(preValue => {\n//       return [...preValue,{id:2,name:name,checked:false}];\n//     });\n//     refTest.current.value = null;\n//   }\n//   //文字列の変更を検知(取得) → 追加ボタンでその値をdivタグに反映\n//   return (\n//     <div className=\"App\">\n//       <TodoList texts1={texts}/>\n//       <input type=\"text\" ref={refTest}/>\n//       <button onClick = {AddTodo}>追加</button>\n//       <button>削除</button>\n//       <div>残りの数: {i}</div>\n//     </div>\n//   );\n// }\n_s(App, \"UYRWBqACyh49wtj+EuCm5YYi8g4=\");\n_c = App;\nfunction About() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"About\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n_c2 = About;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"About\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Link","useState","useRef","TodoList","v4","uuidv4","Menu","jsxDEV","_jsxDEV","App","_s","isMenu","setIsMenu","handleClick","flag","console","log","children","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","path","element","About","_c","_c2","$RefreshReg$"],"sources":["/Users/ugo1/react-tutorial/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport { useState,useRef } from \"react\";\nimport TodoList from \"./TodoList\";\nimport {v4 as uuidv4 } from \"uuid\";\nimport Menu from \"./Menu\";\n\n//next.jsを使わずに画面遷移\nfunction App() {\n  const [isMenu, setIsMenu] = useState(false);\n\n  const handleClick = (flag) => {\n    console.log(isMenu);\n    setIsMenu(flag);\n  }\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n          {!isMenu && (\n              <li>\n                <Link to=\"/Menu\" onClick = {() => handleClick(true)}>Menu</Link>\n              </li>\n          )}\n          {isMenu && (\n              <li>\n              <Link to=\"/about\" onClick = {() => handleClick(false)}>About</Link>\n            </li>\n          )}\n          </ul>\n        </nav>\n\n        <Routes>\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/Menu\" element={<Menu />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\n// function Menu() {\n//   const i = 1\n\n//   //setTextを使うことでtextsに値を書きこむことできる。\n//   const [texts,setText] = useState([\n//     { id:uuidv4() , name:\"test1\", checked:false}\n//   ]);\n\n//   //文字列を取得する\n//   const refTest = useRef();\n\n//   //追加ボタンを押すと呼び出される関数\n//   const AddTodo = () =>{\n//     const name = refTest.current.value;\n//     //値を追加する\n//     setText(preValue => {\n//       return [...preValue,{id:2,name:name,checked:false}];\n//     });\n//     refTest.current.value = null;\n//   }\n//   //文字列の変更を検知(取得) → 追加ボタンでその値をdivタグに反映\n//   return (\n//     <div className=\"App\">\n//       <TodoList texts1={texts}/>\n//       <input type=\"text\" ref={refTest}/>\n//       <button onClick = {AddTodo}>追加</button>\n//       <button>削除</button>\n//       <div>残りの数: {i}</div>\n//     </div>\n//   );\n// }\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}